parameters:
  - name: cloudService
    default: "AWS"
    type: string
  - name: stageDeployment
  - name: storageName

steps:

# Check ${{ parameters.cloudService }}. Default is AWS
#To use the AWS it's also needed a service connection
  - task: S3Download@1  
    inputs:
      awsCredentials: 'AWS-Connection'
      regionName: 'us-east-1'
      bucketName: '${{ parameters.storageName }}'
      sourceFolder: 'plan'
      globExpressions: 'terraform-main-${{ parameters.stageDeployment }}.tar'
      targetFolder: '$(System.DefaultWorkingDirectory)'

  - task: CmdLine@2 
    inputs:
      script: 'tar -xvf terraform-main-${{ parameters.stageDeployment }}.tar'
      workingDirectory: '$(System.DefaultWorkingDirectory)/plan'
    displayName: 'Extract files'

  - task: ms-devlabs.custom-terraform-tasks.custom-terraform-installer-task.TerraformInstaller@0
    inputs:
      terraformVersion: 0.14.7
    displayName: 'Install Terraform'

  - task: TerraformCLI@0
    inputs:
      command: 'import'
      workingDirectory: '$(System.DefaultWorkingDirectory)/plan'
      environmentServiceName: 'AzureDevOps'
      allowTelemetryCollection: true
  
  - task: TerraformCLI@0
    inputs:
      command: 'apply'
      allowTelemetryCollection: true
      workingDirectory: '$(System.DefaultWorkingDirectory)/plan'
      commandOptions: -auto-approve -lock-timeout=10m ${{ parameters.stageDeployment }}.plan"
      environmentServiceName: 'AzureDevOps'
    displayName: 'Terraform Apply'