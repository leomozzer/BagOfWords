parameters:
  - name: awsSecret
  - name: awsKey
  - name: appName
  - name: appLocation
  - name: cloudService
  - name: serviceConnectionName
  - name: stageDeployment
  - name: storageAccountName

jobs:
- job: 'Environment'
  pool: 
    vmImage: ubuntu-latest
  steps:

  - task: CmdLine@2 
    inputs:
      script: 'mv terraform-copy.tfvars terraform-${{ parameters.stageDeployment}}.tfvars'
    displayName: 'Rename .tfvars file'
  
  - task: ms-devlabs.custom-terraform-tasks.custom-terraform-installer-task.TerraformInstaller@0
    inputs:
      terraformVersion: 0.14.7
    displayName: 'Install Terraform'

  - task: TerraformCLI@0
    inputs:
      command: 'init'
      workingDirectory: '$(System.DefaultWorkingDirectory)/terraform-main'
      allowTelemetryCollection: true
    displayName: 'Terraform init'
    
  - task: TerraformCLI@0
    inputs:
      command: 'plan'
      workingDirectory: '$(System.DefaultWorkingDirectory)/terraform-main'
      allowTelemetryCollection: true
      commandOptions: -out=tfplan -input=false -var "app_name=${{ parameters.appName }}" -var "subscription_id=$(SUBSCRIPTION-ID)" -var "client_id=$(CLIENT-ID)" -var "client_secret=$(CLIENT-SECRET)" -var "tenant_id=$(TENANT-ID)" -var "location=${{ parameters.appLocation }}" -var "aws_secret=${{ parameters.awsSecret }}" -var "aws_key=${{ parameters.awsKey }}"
      environmentServiceName: 'AzureDevOps'
    displayName: 'Terraform plan'

  - task: AzureCLI@2
    inputs:
      azureSubscription: 'AzureDevOps'
      scriptType: 'bash'
      scriptLocation: 'inlineScript'
      inlineScript: |
        az storage account create --resource-group ${{ parameters.appName }}-rg --name ${{ parameters.storageAccountName }} --sku Standard_LRS --kind StorageV2 --encryption-services blob --access-tier Cool --allow-blob-public-access false
        az storage container create --name plans --account-name ${{ parameters.storageAccountName }}
    displayName: 'Create storage account'
  
  - task: ArchiveFiles@2
    displayName: Archive terraform-main and plan-files
    inputs:
      includeRootFolder: false
      rootFolderOrFile: $(System.DefaultWorkingDirectory)/terraform-main
      archiveType: tar
      archiveFile: terraform-main-${{ parameters.stageDeployment }}.tar
 
  - task: AzureCLI@2
    displayName: Copy ${{ parameters.stageDeployment }} plan of TF-Live to Storage
    inputs:
      azureSubscription: 'AzureDevOps'
      scriptType: bash
      scriptLocation: inlineScript
      inlineScript: |
        az storage blob upload \
          --container-name plans \
          --file terraform-main-${{ parameters.stageDeployment }}.tar \
          --name $(Build.BuildNumber)-main-${{ parameters.stageDeployment }}.tar \
          --account-name "${{ parameters.storageAccountName }}"