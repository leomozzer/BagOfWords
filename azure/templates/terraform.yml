parameters:
  - name: awsSecret
  - name: awsKey
  - name: appName
  - name: appLocation
  - name: cloudService
  - name: serviceConnectionName
  - name: stageDeployment

jobs:
- job: 'Environment'
  pool: 
    vmImage: ubuntu-latest
  steps:
  
  - task: ms-devlabs.custom-terraform-tasks.custom-terraform-installer-task.TerraformInstaller@0
    inputs:
      terraformVersion: 0.14.7
    displayName: 'Install Terraform'

  - task: TerraformCLI@0
    inputs:
      command: 'init'
      workingDirectory: '$(System.DefaultWorkingDirectory)/terraform-main'
      allowTelemetryCollection: true
    displayName: 'Terraform init'
    
  - task: TerraformCLI@0
    inputs:
      command: 'plan'
      workingDirectory: '$(System.DefaultWorkingDirectory)/terraform-main'
      allowTelemetryCollection: true
      commandOptions: -out=tfplan -input=false -var "app_name=${{ parameters.appName }}" -var "subscription_id=$(SUBSCRIPTION-ID)" -var "client_id=$(CLIENT-ID)" -var "client_secret=$(CLIENT-SECRET)" -var "tenant_id=$(TENANT-ID)" -var "location=${{ parameters.appLocation }}" -var "aws_secret=${{ parameters.awsSecret }}" -var "aws_key=${{ parameters.awsKey }}"
      environmentServiceName: 'AzureDevOps'
    displayName: 'Terraform plan'

  - task: AzureCLI@2
    inputs:
      azureSubscription: 'AzureDevOps'
      scriptType: 'bash'
      scriptLocation: 'inlineScript'
      inlineScript: |
        az storage account create --resource-group ${{ parameters.appName }}-rg --name "satest123456" --sku Standard_LRS --kind StorageV2 --encryption-services blob --access-tier Cool --allow-blob-public-access false
      displayName: 'Create storage account'
 
  # - task: TerraformCLI@0
  #   inputs:
  #     command: 'apply'
  #     allowTelemetryCollection: true
  #     workingDirectory: '$(System.DefaultWorkingDirectory)/terraform-main'
  #     commandOptions: -auto-approve -input=false -var "app_name=${{ parameters.appName }}" -var "subscription_id=$(SUBSCRIPTION-ID)" -var "client_id=$(CLIENT-ID)" -var "client_secret=$(CLIENT-SECRET)" -var "tenant_id=$(TENANT-ID)" -var "location=${{ parameters.appLocation }}" -var "aws_secret=${{ parameters.awsSecret }}" -var "aws_key=${{ parameters.awsKey }}"
  #     environmentServiceName: 'AzureDevOps'
  #   displayName: 'Terraform Apply'