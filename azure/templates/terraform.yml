parameters:
  - name: awsSecret
  - name: awsKey
  - name: appName
  - name: appLocation

jobs:
- job: 'Environment'
  pool: 
    vmImage: ubuntu-latest
  steps:
  - task: ms-devlabs.custom-terraform-tasks.custom-terraform-installer-task.TerraformInstaller@0
    inputs:
      terraformVersion: 0.14.7
    displayName: 'Install Terraform'
  - task: TerraformCLI@0
    inputs:
      command: 'init'
      workingDirectory: '$(System.DefaultWorkingDirectory)/terraform-main'
      allowTelemetryCollection: true
      displayName: 'Terraform init'
  - task: TerraformCLI@0
    inputs:
      command: 'plan'
      workingDirectory: '$(System.DefaultWorkingDirectory)/terraform-main'
      allowTelemetryCollection: true
      commandOptions: -out=tfplan -input=false -var "app_name=${{ parameters.appName }}" -var "subscription_id=$(SUBSCRIPTION-ID)" -var "client_id=$(CLIENT-ID)" -var "client_secret=$(CLIENT-SECRET)" -var "tenant_id=$(TENANT-ID)" -var "location=${{ parameters.appLocation }}" -var "aws_secret=${{ parameters.awsSecret }}" -var "aws_key=${{ parameters.awsKey }}"
      displayName: 'Terraform plan'
      environmentServiceName: 'AzureDevOps'
  - task: TerraformCLI@0
    inputs:
      command: 'apply'
      allowTelemetryCollection: true
      workingDirectory: '$(System.DefaultWorkingDirectory)/terraform-main'
      commandOptions: -out=tfplan -input=false -var "app_name=${{ parameters.appName }}" -var "subscription_id=$(SUBSCRIPTION-ID)" -var "client_id=$(CLIENT-ID)" -var "client_secret=$(CLIENT-SECRET)" -var "tenant_id=$(TENANT-ID)" -var "location=${{ parameters.appLocation }}" -var "aws_secret=${{ parameters.awsSecret }}" -var "aws_key=${{ parameters.awsKey }}"
      displayName: 'Terraform Apply'
      environmentServiceName: 'AzureDevOps'
