parameters:
  - name: stageDeployment
  - name: performTests
    default: false
    type: boolean
  - name: customKeyVaultName
  - name: appName

jobs:
- job: 'Tests'
  condition: eq(${{ parameters.performTests }}, 'true')
  pool: 
    vmImage: ubuntu-latest
  steps:
  - task: NodeTool@0
    inputs:
      versionSpec: '12.x'
    displayName: 'Install Node.js'
  - script: |
      npm install
      npm install -D
    displayName: 'npm install & devDependencies'
  - script: |
      npm run test -- --watchAll=false
    displayName: 'perform tests'

- job: 'ConfigApp_${{ parameters.stageDeployment }}'
  pool: 
    vmImage: ubuntu-latest
  steps:
  - task: AzureKeyVault@2
    inputs:
      azureSubscription: 'AzureDevOps'
      KeyVaultName: ${{ parameters.customKeyVaultName }}
      SecretsFilter: '*'
      RunAsPreJob: true
    displayName: 'Get secrets from ${{ parameters.customKeyVaultName }}'

  - task: NodeTool@0
    inputs:
      versionSpec: '12.x'
    displayName: 'Install Node.js'
    
  - script: |
      mkdir serverless-deploy
      mv src serverless-deploy
      mv package.json serverless-deploy
      npm install
      npm install -g serverless
      mv serverless-copy.yml serverless-deploy/serverless.yml
    displayName: 'Set up serverless folder & file'

  - task: CmdLine@2
    inputs:
      script: "serverless config credentials -o --provider aws --key $(aws-key) --secret $(aws-secret)"
      workingDirectory: '$(System.DefaultWorkingDirectory)/serverless-deploy'
    displayName: "Configure serverless with AWS credentials"

  - task: CmdLine@2
    inputs:
      script: "serverless deploy --verbose --stage ${{ parameters.stageDeployment }} --MICROSOFT_TRANSLATOR_SUBSCRIPTION_KEY $(${{ parameters.appName }}-${{ parameters.stageDeployment }}-MICROSOFT-TRANSLATOR-SUBSCRIPTION-KEY) --MICROSOFT_TRANSLATOR_LOCATION $(${{ parameters.appName }}-${{ parameters.stageDeployment }}-MICROSOFT-TRANSLATOR-LOCATION)"
      workingDirectory: '$(System.DefaultWorkingDirectory)/serverless-deploy'
    displayName: "Deploy ${{ parameters.stageDeployment }}"